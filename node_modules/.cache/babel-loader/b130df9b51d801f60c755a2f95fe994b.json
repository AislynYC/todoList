{"ast":null,"code":"var _jsxFileName = \"/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Todo.js\n * \n * \n * \n * \n */\nimport { useState, useEffect } from 'react';\nimport Card from '../components/Card.js';\nimport tStyle from './style/Todo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  var cardsDefault = new Object();\n  const [, rerender] = useState();\n  let key = 1; // const [key, setKey] = useState(1);\n\n  var todoDefault = new Object();\n  cardsDefault = {\n    0: {\n      name: \"\",\n      todoList: {\n        0: \"\"\n      },\n      todoListKey: 1\n    }\n  };\n  const [cards, setCards] = useState(cardsDefault);\n  const [removeState, setRemoveState] = useState(false); // let [cards, setCards] = useState([\n  //                                         {\n  //                                             id: 0,\n  //                                             name: \"\",\n  //                                             description: \"\",\n  //                                             todo: [\"\"]\n  //                                         },\n  //                                     ]);\n\n  const addCard = () => {\n    setRemoveState(false); // setCards(prev => prev[++key] = {\n    //         name: \"\",\n    //         todoList: {\n    //             0: \"\",\n    //     }\n    // })\n\n    let tempCard = Object.assign({}, cards);\n    tempCard[key] = cardsDefault[0]; // cards[key] = cardsDefault[0];\n\n    console.log(\"Todo addCard Cards: \", cards);\n    key++;\n    setCards(tempCard); // setKey(prev => prev + 1);\n  };\n\n  const removeCard = cardKey => {\n    console.log(\"Todo removeCard cardkey: \", cardKey);\n\n    if (removeState) {\n      console.log(\"Todo removeCard cards b4: \", cards); // setCards(prev => prev[cardKey] = {});\n      // var temp = cards; \n      // delete temp[cardKey];\n      // setCards(prev => prev = temp);\n\n      delete cards.cardKey;\n      console.log(\"Todo removeCard cards after: \", cards); // rerender;\n    }\n  };\n\n  const addTodoItem = (cardKey, todoListKey, currentTodoList) => {\n    // cards[cardKey].todoList[todoKey] = \"\";\n    console.log(\"addTodoItem cards: \", cards);\n    console.log(\"addTodoItem cardKey: \", cardKey);\n    console.log(\"addTodoItem cards[cardKey].todoList: \", cards[cardKey].todoList);\n    console.log(\"addTodoItem cards[cardKey].todoListKey: \", cards[cardKey].todoListKey);\n    setCards(prev => prev[cardKey].todoList = { ...currentTodoList,\n      [prev[cardKey].todoListKey]: \"\"\n    });\n  }; // [prev[cardKey].todoListKey] = \"\"\n\n\n  const incrementTodoKey = cardKey => {// setCards(prev => console.log(\"incrementTodoKey: \" , prev));\n  };\n\n  useEffect(() => {\n    console.log(\"Todo UseEffeect cards: \", cards);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tStyle.todoContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: tStyle.editsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: tStyle.addEvent,\n        onClick: addCard,\n        children: \"\\uFF0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: tStyle.removeEvent,\n        onClick: () => {\n          console.log(removeState);\n          setRemoveState(!removeState);\n          console.log(removeState);\n        },\n        children: \"\\uFF0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: tStyle.cardsContainer,\n      children: Object.keys(cards).map((cardKey, index) => {\n        console.log(\"Todo.js cardKey: \", cardKey);\n        console.log(\"todojs objecke: \", Object.keys(cards));\n        return /*#__PURE__*/_jsxDEV(Card, {\n          removeCard: removeCard,\n          removeState: removeState,\n          card: cards[cardKey],\n          cardKey: cardKey,\n          addTodoItem: addTodoItem,\n          incrementTodoKey: incrementTodoKey\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"POyDpqZEeYHk1IrQsNmhTVcUjJE=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Todo.js"],"names":["useState","useEffect","Card","tStyle","Todo","cardsDefault","Object","rerender","key","todoDefault","name","todoList","todoListKey","cards","setCards","removeState","setRemoveState","addCard","tempCard","assign","console","log","removeCard","cardKey","addTodoItem","currentTodoList","prev","incrementTodoKey","todoContainer","editsContainer","addEvent","removeEvent","cardsContainer","keys","map","index"],"mappings":"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","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Todo.js\n * \n * \n * \n * \n */\n\n\nimport {useState, useEffect} from 'react';\n\nimport Card from '../components/Card.js'\nimport tStyle from './style/Todo.module.css';\n\n\nfunction Todo() {\n    var cardsDefault = new Object();\n    const [, rerender] = useState();\n    let key = 1;\n    // const [key, setKey] = useState(1);\n    var todoDefault = new Object();\n    cardsDefault = {\n        0: {\n            name: \"\",\n            todoList: {\n                0: \"\",\n            },\n            todoListKey: 1,\n        }, \n        \n    };\n\n\n\n    const [cards, setCards] = useState(cardsDefault);\n\n    \n    const [removeState, setRemoveState] = useState(false);\n    // let [cards, setCards] = useState([\n    //                                         {\n    //                                             id: 0,\n    //                                             name: \"\",\n    //                                             description: \"\",\n    //                                             todo: [\"\"]\n    //                                         },\n                                            \n    //                                     ]);\n   \n    \n\n    \n    const addCard = () => {\n        setRemoveState(false);\n        // setCards(prev => prev[++key] = {\n            \n        //         name: \"\",\n        //         todoList: {\n        //             0: \"\",\n                \n        //     }\n        // })\n        let tempCard = Object.assign({}, cards);\n        tempCard[key] = cardsDefault[0];\n        // cards[key] = cardsDefault[0];\n        console.log(\"Todo addCard Cards: \", cards);\n        key++;\n        setCards(tempCard);\n        // setKey(prev => prev + 1);\n    }\n\n    const removeCard = (cardKey) => { \n        console.log(\"Todo removeCard cardkey: \", cardKey);\n        if (removeState) \n        {\n            console.log(\"Todo removeCard cards b4: \", cards);\n\n            // setCards(prev => prev[cardKey] = {});\n            // var temp = cards; \n            // delete temp[cardKey];\n            // setCards(prev => prev = temp);\n            delete cards.cardKey;\n            console.log(\"Todo removeCard cards after: \", cards);\n            // rerender;\n\n        }\n    }\n    \n    const addTodoItem = (cardKey, todoListKey, currentTodoList) => {\n        // cards[cardKey].todoList[todoKey] = \"\";\n        console.log(\"addTodoItem cards: \", cards);\n        console.log(\"addTodoItem cardKey: \", cardKey);\n\n        console.log(\"addTodoItem cards[cardKey].todoList: \", cards[cardKey].todoList);\n        console.log(\"addTodoItem cards[cardKey].todoListKey: \", cards[cardKey].todoListKey);\n\n\n\n        setCards(prev => prev[cardKey].todoList = {\n            ...currentTodoList, \n            [prev[cardKey].todoListKey] : \"\"\n\n        });\n\n    }\n    // [prev[cardKey].todoListKey] = \"\"\n    const incrementTodoKey = (cardKey) => {\n        // setCards(prev => console.log(\"incrementTodoKey: \" , prev));\n    }\n\n\n    useEffect(() => {\n        console.log(\"Todo UseEffeect cards: \" , cards);\n    }, [])\n\n    return (\n        <div className={tStyle.todoContainer}>\n            <div className={tStyle.editsContainer}>\n                <button className={tStyle.addEvent}\n                        onClick={addCard}>\n                    ＋\n                </button>\n                <button className={tStyle.removeEvent}\n                        onClick={() => {console.log(removeState); setRemoveState(!removeState); console.log(removeState)}}>\n                    －\n                </button>\n            </div>\n\n            <div className={tStyle.cardsContainer}> \n            \n                {\n                    \n                    Object.keys(cards).map((cardKey, index) => {\n                        console.log(\"Todo.js cardKey: \", cardKey);\n                        console.log(\"todojs objecke: \", Object.keys(cards));\n                        return (\n                            <Card removeCard = {removeCard}\n                                  removeState = {removeState} \n                                  card = {cards[cardKey]}\n                                  cardKey = {cardKey}\n                                  addTodoItem={addTodoItem}\n                                  incrementTodoKey={incrementTodoKey}\n                                  key={index}></Card>\n                        )\n                    })\n                }\n             \n                \n            </div>\n\n        </div>\n    );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}