{"ast":null,"code":"import _slicedToArray from\"/Users/dumbcan/Desktop/todoList/todoList/todoList/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Card.js\n * \n * \n * \n * \n */import{useState,useEffect,useRef}from'react';import{isCompositeComponent}from'react-dom/test-utils';import TodoItem from'../components/TodoItem.js';import cStyle from'./style/Card.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Card(props){var cardKey=props.cardKey,card=props.card,addTodoItem=props.addTodoItem,deleteTodoItem=props.deleteTodoItem,removeCard=props.removeCard,updateTodoItemMessage=props.updateTodoItemMessage,updateCardName=props.updateCardName,removeState=props.removeState;var removeCardID=useRef(null);var cardRef=useRef(null);var _useState=useState(props.card.name),_useState2=_slicedToArray(_useState,2),cardName=_useState2[0],setCardName=_useState2[1];var inputEdited=false;// const removeCardID = \"removeCard\" + cardKey;\nvar switchColor=function switchColor(elem){console.log(\"fired once\");if(elem.target.style.textDecoration==\"line-through\"){console.log(\"clicked \",elem.target.style.textDecoration);elem.target.style.textDecoration=\"\";elem.target.style.backgroundColor=\"#ffffff\";elem.target.style.color=\"#666668\";}else{// elem.target.style.backgroundColor = \"#9ecd49\";\nelem.target.style.color=\"#9ecd49\";elem.target.style.textDecoration=\"line-through\";// elem.target.style.border = \"#9ecd49 2px solid\"\n}};/*  addTodo()\n        Purpose:    calls addTodoItem and pass in cardKey\n        Effect:     Calls props function addTodoItem and pass in CardID\n        Parameters: none\n    */var addTodo=function addTodo(){addTodoItem(cardKey);};var updateCardNameWithTarget=function updateCardNameWithTarget(){console.log(\"cardjs updateCardNameWthTar targetval: \",cardRef.current.value);updateCardName(cardKey,cardRef.current.value);};var removeCardWithKey=function removeCardWithKey(){if(removeState){removeCard(cardKey);}};/*  deleteTodoItemWithKey()\n        Purpose:    calls deleteTodoItem and pass in cardKey\n        Effect:     Calls props function deleteTodoItem and pass in \n                    cardKey with received arguments todoItemKey\n        Parameters: int todoItemKey - the identifier to the todoItem that will\n                                      be changed \n    */var deleteTodoItemWithKey=function deleteTodoItemWithKey(todoItemKey){deleteTodoItem(cardKey,todoItemKey);};/*  updateTodoItemMessageWithKey()\n        Purpose:    calls updateTodoItemMessage and pass in cardKey\n        Effect:     Calls props function updateTodoItemMessage and pass in \n                    cardKey with received arguments todoItemKey and message\n        Parameters: int todoItemKey - the identifier to the todoItem that will\n                                      be changed \n                    string message  - the message that needs to be saved\n    */var updateTodoItemMessageWithKey=function updateTodoItemMessageWithKey(todoItemKey,message){updateTodoItemMessage(cardKey,todoItemKey,message);};useEffect(function(){var titleInput=document.getElementById(cardKey);var overlayRemoveCard=document.getElementById(removeCardID);/*  checks if the mouse is clicked outside of the provided target\n            then calls corresponding function within */function checkOutside(e){// console.log(\"todoItem checkOutside called: \", inputEdited);\nvar clickedInsideInput=titleInput.contains(e.target);if(inputEdited&&!clickedInsideInput){console.log(\"TodoItem oh shet clicked outside\");updateCardNameWithTarget();inputEdited=false;}}titleInput.addEventListener(\"click\",function(){return inputEdited=true;});removeCardID.current.addEventListener(\"click\",removeCardWithKey);document.addEventListener(\"click\",function(e){return checkOutside(e);});return function(){titleInput.removeEventListener(\"click\",function(){return inputEdited=true;});// removeCardID.current.removeEventListener(\"click\", removeCardWithKey);\ndocument.removeEventListener(\"click\",function(e){return checkOutside(e);});};});return/*#__PURE__*/_jsxs(\"div\",{className:removeState?cStyle.cardRemoveContainer:cStyle.cardContainer/* onClick={async () => await props.removeCard(cardKey)} */,children:[/*#__PURE__*/_jsxs(\"div\",{className:cStyle.titleContainer,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter a name...\",defaultValue:cardName,id:cardKey,ref:cardRef,className:cStyle.titleInput,onChange:function onChange(){inputEdited=true;console.log(\"inputEdited Changed from CardJS: \",cardKey,\" \",inputEdited);}}),/*#__PURE__*/_jsx(\"div\",{className:cStyle.addTodo,onClick:function onClick(){addTodo();console.log(\"add button clicked\");},children:\"\\uFF0B\"})]}),/*#__PURE__*/_jsx(\"div\",{className:cStyle.scrollableContainer,children:Object.keys(card.todoList).map(function(todoItemKey,index){return/*#__PURE__*/ (// console.log(\"card.js \")\n_jsx(TodoItem,{todo:card.todoList[todoItemKey],todoItemKey:todoItemKey,deleteTodoItem:deleteTodoItemWithKey,updateTodoItemMessage:updateTodoItemMessageWithKey},index));})}),/*#__PURE__*/_jsx(\"div\",{ref:removeCardID,className:cStyle.removeOverlayContainer,children:removeState?/*#__PURE__*/_jsx(\"div\",{className:cStyle.removeOverlay,children:\"CLICK TO REMOVE\"}):/*#__PURE__*/_jsx(\"span\",{})})]});}export default Card;","map":{"version":3,"sources":["/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Card.js"],"names":["useState","useEffect","useRef","isCompositeComponent","TodoItem","cStyle","Card","props","cardKey","card","addTodoItem","deleteTodoItem","removeCard","updateTodoItemMessage","updateCardName","removeState","removeCardID","cardRef","name","cardName","setCardName","inputEdited","switchColor","elem","console","log","target","style","textDecoration","backgroundColor","color","addTodo","updateCardNameWithTarget","current","value","removeCardWithKey","deleteTodoItemWithKey","todoItemKey","updateTodoItemMessageWithKey","message","titleInput","document","getElementById","overlayRemoveCard","checkOutside","e","clickedInsideInput","contains","addEventListener","removeEventListener","cardRemoveContainer","cardContainer","titleContainer","scrollableContainer","Object","keys","todoList","map","index","removeOverlayContainer","removeOverlay"],"mappings":"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","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Card.js\n * \n * \n * \n * \n */\n\n\nimport {useState, useEffect, useRef} from 'react';\nimport { isCompositeComponent } from 'react-dom/test-utils';\n\nimport TodoItem from '../components/TodoItem.js'\n\n\nimport cStyle from './style/Card.module.css';\n\n\nfunction Card(props) {\n    const {cardKey, card, addTodoItem, deleteTodoItem, removeCard, updateTodoItemMessage, updateCardName, removeState} = props;\n \n    \n    const removeCardID = useRef(null);\n    const cardRef = useRef(null);\n    const [cardName, setCardName] = useState(props.card.name);\n        \n    let inputEdited = false;\n    // const removeCardID = \"removeCard\" + cardKey;\n\n    const switchColor = (elem) => {\n        console.log(\"fired once\");\n        if (elem.target.style.textDecoration == \"line-through\") {\n            console.log(\"clicked \", elem.target.style.textDecoration)\n            elem.target.style.textDecoration = \"\";\n            elem.target.style.backgroundColor = \"#ffffff\";\n            elem.target.style.color = \"#666668\";\n        }\n        else {\n            // elem.target.style.backgroundColor = \"#9ecd49\";\n            elem.target.style.color = \"#9ecd49\";\n            elem.target.style.textDecoration = \"line-through\";\n\n            // elem.target.style.border = \"#9ecd49 2px solid\"\n        }\n      \n\n    }\n\n    /*  addTodo()\n        Purpose:    calls addTodoItem and pass in cardKey\n        Effect:     Calls props function addTodoItem and pass in CardID\n        Parameters: none\n    */\n    const addTodo = () => \n    {\n        addTodoItem(cardKey);\n    }\n\n \n\n    const updateCardNameWithTarget = () => \n    {\n        console.log(\"cardjs updateCardNameWthTar targetval: \", cardRef.current.value);\n        updateCardName(cardKey, cardRef.current.value)\n    }\n\n    const removeCardWithKey = () => \n    { \n        if (removeState) {\n            removeCard(cardKey);\n        }\n    }\n\n    /*  deleteTodoItemWithKey()\n        Purpose:    calls deleteTodoItem and pass in cardKey\n        Effect:     Calls props function deleteTodoItem and pass in \n                    cardKey with received arguments todoItemKey\n        Parameters: int todoItemKey - the identifier to the todoItem that will\n                                      be changed \n    */\n    const deleteTodoItemWithKey = (todoItemKey) => \n    {\n        deleteTodoItem(cardKey, todoItemKey);\n    }\n\n    /*  updateTodoItemMessageWithKey()\n        Purpose:    calls updateTodoItemMessage and pass in cardKey\n        Effect:     Calls props function updateTodoItemMessage and pass in \n                    cardKey with received arguments todoItemKey and message\n        Parameters: int todoItemKey - the identifier to the todoItem that will\n                                      be changed \n                    string message  - the message that needs to be saved\n    */\n    const updateTodoItemMessageWithKey = (todoItemKey, message) => \n    {\n        updateTodoItemMessage(cardKey, todoItemKey, message);\n    }\n\n\n    useEffect(() =>\n    {\n        const titleInput = document.getElementById(cardKey);\n        const overlayRemoveCard = document.getElementById(removeCardID);\n        /*  checks if the mouse is clicked outside of the provided target\n            then calls corresponding function within */\n        function checkOutside(e) \n        {\n            // console.log(\"todoItem checkOutside called: \", inputEdited);\n            var clickedInsideInput = titleInput.contains(e.target);\n            if (inputEdited && !clickedInsideInput) {\n                console.log(\"TodoItem oh shet clicked outside\");\n                updateCardNameWithTarget();\n                inputEdited = false;\n            }\n        }\n\n        titleInput.addEventListener(\"click\", () => inputEdited = true);\n        removeCardID.current.addEventListener(\"click\", removeCardWithKey);\n        document.addEventListener(\"click\", (e) => checkOutside(e));\n\n        return (() => \n        {\n            titleInput.removeEventListener(\"click\", () => inputEdited = true)\n            // removeCardID.current.removeEventListener(\"click\", removeCardWithKey);\n            document.removeEventListener(\"click\", (e) => checkOutside(e));\n        })\n\n    })\n\n\n    return (\n        <div className={removeState ? cStyle.cardRemoveContainer : cStyle.cardContainer} \n             /* onClick={async () => await props.removeCard(cardKey)} */>\n            <div className={cStyle.titleContainer}> \n                <input type=\"text\" \n                       placeholder=\"Enter a name...\" \n                       defaultValue={cardName} \n                       id={cardKey}\n                       ref={cardRef}\n                       className={cStyle.titleInput}\n                       onChange={() => {inputEdited=true; console.log(\"inputEdited Changed from CardJS: \", cardKey, \" \", inputEdited)}}/>\n                <div className={cStyle.addTodo} onClick={() => {addTodo(); console.log(\"add button clicked\")}}>＋</div>\n            </div>\n            \n\n            <div className={cStyle.scrollableContainer}> \n                \n                {\n                    Object.keys(card.todoList).map((todoItemKey, index) => {\n\n                        return (\n                            // console.log(\"card.js \")\n                            <TodoItem todo={card.todoList[todoItemKey]}\n                                      todoItemKey = {todoItemKey}\n                                      key = {index}\n                                      deleteTodoItem={deleteTodoItemWithKey}\n                                      updateTodoItemMessage={updateTodoItemMessageWithKey}>\n                                      </TodoItem>\n                        )\n                    })\n                }\n                \n                \n            </div>\n            <div  ref={removeCardID} className={cStyle.removeOverlayContainer}>\n                {removeState ? <div className={cStyle.removeOverlay}>CLICK TO REMOVE</div> : <span></span>}\n            </div>\n        \n        </div>\n    );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}