{"ast":null,"code":"var _jsxFileName = \"/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Todo.js\n * \n * \n * \n * \n */\nimport { useState, useEffect } from 'react';\nimport Card from '../components/Card.js';\nimport tStyle from './style/Todo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  var cards = new Object();\n  let key = 0;\n  var cards = {\n    1: {\n      name: \"\",\n      todoList: {\n        1: \"\"\n      }\n    }\n  };\n  c;\n  const [ident, setIdent] = useState(1);\n  const [removeState, setRemoveState] = useState(false); // let [cards, setCards] = useState([\n  //                                         {\n  //                                             id: 0,\n  //                                             name: \"\",\n  //                                             description: \"\",\n  //                                             todo: [\"\"]\n  //                                         },\n  //                                     ]);\n\n  const addCard = () => {\n    setRemoveState(false);\n    cards.push({\n      id: ident,\n      name: \"\",\n      description: \"\",\n      todo: [\"\"]\n    });\n    setIdent(ident + 1);\n  };\n\n  const removeCard = async e => {\n    if (removeState) {\n      var ind = 0;\n      /* to find the ind of target to be removed */\n\n      for (var i = 0; i < cards.length; i++) {\n        if (cards[i].id == e.target.id) {\n          console.log(\"cards: \", cards[i]);\n          ind = i;\n        }\n      }\n\n      setCards(cards.filter((_, i) => i !== ind));\n      console.log(\"after delete: \", cards.length);\n    }\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tStyle.todoContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: tStyle.editsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: tStyle.addEvent,\n        onClick: addCard,\n        children: \"\\uFF0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: tStyle.removeEvent,\n        onClick: () => {\n          console.log(removeState);\n          setRemoveState(!removeState);\n          console.log(removeState);\n        },\n        children: \"\\uFF0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: tStyle.cardsContainer,\n      children: cards.map(card => {\n        console.log(card);\n        return /*#__PURE__*/_jsxDEV(Card, {\n          removeCard: removeCard,\n          removeState: removeState,\n          card: card\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 34\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"GD3xs1FLEvJMy9i1XdEamjHd2IY=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Todo.js"],"names":["useState","useEffect","Card","tStyle","Todo","cards","Object","key","name","todoList","c","ident","setIdent","removeState","setRemoveState","addCard","push","id","description","todo","removeCard","e","ind","i","length","target","console","log","setCards","filter","_","todoContainer","editsContainer","addEvent","removeEvent","cardsContainer","map","card"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACZ,MAAIC,KAAK,GAAG,IAAIC,MAAJ,EAAZ;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIF,KAAK,GAAG;AACR,OAAG;AACCG,MAAAA,IAAI,EAAE,EADP;AAECC,MAAAA,QAAQ,EAAE;AACN,WAAG;AADG;AAFX;AADK,GAAZ;AAUAC,EAAAA,CAAC;AACD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C,CAfY,CAgBZ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAKA,QAAMe,OAAO,GAAG,MAAM;AAClBD,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAT,IAAAA,KAAK,CAACW,IAAN,CAAW;AACKC,MAAAA,EAAE,EAAEN,KADT;AAEKH,MAAAA,IAAI,EAAE,EAFX;AAGKU,MAAAA,WAAW,EAAE,EAHlB;AAIKC,MAAAA,IAAI,EAAE,CAAC,EAAD;AAJX,KAAX;AAOAP,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,GAVD;;AAYA,QAAMS,UAAU,GAAG,MAAMC,CAAN,IAAY;AAC3B,QAAIR,WAAJ,EACA;AACI,UAAIS,GAAG,GAAG,CAAV;AACA;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,KAAK,CAACmB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,YAAIlB,KAAK,CAACkB,CAAD,CAAL,CAASN,EAAT,IAAeI,CAAC,CAACI,MAAF,CAASR,EAA5B,EAAgC;AAC5BS,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAwBtB,KAAK,CAACkB,CAAD,CAA7B;AACAD,UAAAA,GAAG,GAAGC,CAAN;AACH;AACJ;;AAEDK,MAAAA,QAAQ,CAACvB,KAAK,CAACwB,MAAN,CAAa,CAACC,CAAD,EAAIP,CAAJ,KAAUA,CAAC,KAAKD,GAA7B,CAAD,CAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA+BtB,KAAK,CAACmB,MAArC;AACH;AACJ,GAfD;;AAiBAvB,EAAAA,SAAS,CAAE,MAAM,CAGhB,CAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEE,MAAM,CAAC4B,aAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE5B,MAAM,CAAC6B,cAAvB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAE7B,MAAM,CAAC8B,QAA1B;AACQ,QAAA,OAAO,EAAElB,OADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,SAAS,EAAEZ,MAAM,CAAC+B,WAA1B;AACQ,QAAA,OAAO,EAAE,MAAM;AAACR,UAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AAA0BC,UAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AAA8Ba,UAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AAAyB,SADzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACgC,cAAvB;AAAA,gBAEQ9B,KAAK,CAAC+B,GAAN,CAAWC,IAAD,IAAU;AAChBX,QAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACA,4BAAS,QAAC,IAAD;AAAM,UAAA,UAAU,EAAEjB,UAAlB;AACM,UAAA,WAAW,EAAEP,WADnB;AAEM,UAAA,IAAI,EAAEwB;AAFZ;AAAA;AAAA;AAAA;AAAA,gBAAT;AAGH,OALD;AAFR;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA1FQjC,I;;KAAAA,I;AA4FT,eAAeA,IAAf","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Todo.js\n * \n * \n * \n * \n */\n\n\nimport {useState, useEffect} from 'react';\n\nimport Card from '../components/Card.js'\nimport tStyle from './style/Todo.module.css';\n\n\nfunction Todo() {\n    var cards = new Object();\n    let key = 0;\n    var cards = {\n        1: {\n            name: \"\",\n            todoList: {\n                1: \"\",\n            }\n        }\n    }\n\n\n    c\n    const [ident, setIdent] = useState(1);\n    const [removeState, setRemoveState] = useState(false);\n    // let [cards, setCards] = useState([\n    //                                         {\n    //                                             id: 0,\n    //                                             name: \"\",\n    //                                             description: \"\",\n    //                                             todo: [\"\"]\n    //                                         },\n                                            \n    //                                     ]);\n   \n    \n\n    \n    const addCard = () => {\n        setRemoveState(false);\n        cards.push({\n                        id: ident,\n                        name: \"\",\n                        description: \"\",\n                        todo: [\"\"] \n\n        })\n        setIdent(ident + 1);\n    }\n\n    const removeCard = async(e) => { \n        if (removeState) \n        {\n            var ind = 0;\n            /* to find the ind of target to be removed */\n            for (var i = 0; i < cards.length; i++) {\n                if (cards[i].id == e.target.id) {\n                    console.log(\"cards: \" , cards[i]);\n                    ind = i;\n                }\n            }\n\n            setCards(cards.filter((_, i) => i !== ind));\n            console.log(\"after delete: \" , cards.length);\n        }\n    }\n    \n    useEffect( () => {\n        \n        \n    }, [])\n\n    return (\n        <div className={tStyle.todoContainer}>\n            <div className={tStyle.editsContainer}>\n                <button className={tStyle.addEvent}\n                        onClick={addCard}>\n                    ＋\n                </button>\n                <button className={tStyle.removeEvent}\n                        onClick={() => {console.log(removeState); setRemoveState(!removeState); console.log(removeState)}}>\n                    －\n                </button>\n            </div>\n\n            <div className={tStyle.cardsContainer}> \n                {\n                    cards.map((card) => {\n                        console.log(card);\n                        return ( <Card removeCard={removeCard}\n                                       removeState={removeState}\n                                       card={card}></Card>);\n                    })\n                }\n                \n            </div>\n\n        </div>\n    );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}