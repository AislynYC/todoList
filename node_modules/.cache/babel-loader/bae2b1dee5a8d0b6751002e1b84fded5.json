{"ast":null,"code":"/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * TodoItem.js\n * \n * \n * \n * \n */import{useState,useEffect,useRef}from'react';import{TextInput}from'react-native';import{isCompositeComponent}from'react-dom/test-utils';import{ClickAwayListener}from'@material-ui/core';import tStyle from'./style/TodoItem.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Card(props){var todoItemKey=props.todoItemKey,deleteTodoItem=props.deleteTodoItem,updateTodoItemMessage=props.updateTodoItemMessage,todo=props.todo;var todoItemRef=useRef(null);// const [inputEdited, setInputEdited] = useState(false);\nvar inputEdited=false;var message=todo;var deleteCurrent=function deleteCurrent(){deleteTodoItem(todoItemKey);};var updateMessage=function updateMessage(){updateTodoItemMessage(todoItemKey,todoItemRef.current.value);};useEffect(function(){var todoInput=document.getElementById(todoItemKey);function checkOutside(e){// console.log(\"todoItem checkOutside called: \", todoItemRef);\nvar clickedInsideInput=todoInput.contains(e.target);if(inputEdited&&!clickedInsideInput){updateMessage();inputEdited=false;}}document.addEventListener(\"click\",function(e){return checkOutside(e);});return function(){document.removeEventListener(\"click\",function(e){return checkOutside(e);});};});return/*#__PURE__*/_jsxs(\"div\",{className:tStyle.todoItemContainer,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"what to do... \",defaultValue:message,id:todoItemKey,ref:todoItemRef,className:tStyle.messageInput,onChange:function onChange(e){inputEdited=true;console.log(\"textinput changed\");}}),/*#__PURE__*/_jsx(\"div\",{className:tStyle.deleteContainer,onClick:deleteCurrent,children:\"\\u2718\"})]});}export default Card;","map":{"version":3,"sources":["/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/TodoItem.js"],"names":["useState","useEffect","useRef","TextInput","isCompositeComponent","ClickAwayListener","tStyle","Card","props","todoItemKey","deleteTodoItem","updateTodoItemMessage","todo","todoItemRef","inputEdited","message","deleteCurrent","updateMessage","current","value","todoInput","document","getElementById","checkOutside","e","clickedInsideInput","contains","target","addEventListener","removeEventListener","todoItemContainer","messageInput","console","log","deleteContainer"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,GAGA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,MAA9B,KAA2C,OAA3C,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,OAASC,oBAAT,KAAqC,sBAArC,CACA,OAASC,iBAAT,KAAkC,mBAAlC,CAIA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,C,wFAGA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAEjB,GAAOC,CAAAA,WAAP,CAAmED,KAAnE,CAAOC,WAAP,CAAoBC,cAApB,CAAmEF,KAAnE,CAAoBE,cAApB,CAAoCC,qBAApC,CAAmEH,KAAnE,CAAoCG,qBAApC,CAA2DC,IAA3D,CAAmEJ,KAAnE,CAA2DI,IAA3D,CACA,GAAMC,CAAAA,WAAW,CAAGX,MAAM,CAAC,IAAD,CAA1B,CACA;AACA,GAAIY,CAAAA,WAAW,CAAG,KAAlB,CACA,GAAIC,CAAAA,OAAO,CAAGH,IAAd,CAEA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EACtB,CACIN,cAAc,CAACD,WAAD,CAAd,CAGH,CALD,CAOA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EACtB,CAEIN,qBAAqB,CAACF,WAAD,CAAcI,WAAW,CAACK,OAAZ,CAAoBC,KAAlC,CAArB,CAEH,CALD,CAOAlB,SAAS,CAAC,UACV,CACI,GAAMmB,CAAAA,SAAS,CAAGC,QAAQ,CAACC,cAAT,CAAwBb,WAAxB,CAAlB,CAGA,QAASc,CAAAA,YAAT,CAAsBC,CAAtB,CACA,CACI;AACA,GAAIC,CAAAA,kBAAkB,CAAGL,SAAS,CAACM,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAzB,CACA,GAAIb,WAAW,EAAI,CAACW,kBAApB,CAAwC,CAEpCR,aAAa,GACbH,WAAW,CAAG,KAAd,CACH,CACJ,CAEDO,QAAQ,CAACO,gBAAT,CAA0B,OAA1B,CAAmC,SAACJ,CAAD,QAAOD,CAAAA,YAAY,CAACC,CAAD,CAAnB,EAAnC,EAEA,MAAQ,WACR,CACIH,QAAQ,CAACQ,mBAAT,CAA6B,OAA7B,CAAsC,SAACL,CAAD,QAAOD,CAAAA,YAAY,CAACC,CAAD,CAAnB,EAAtC,EACH,CAHD,CAKH,CAvBQ,CAAT,CA2BA,mBACI,aAAK,SAAS,CAAElB,MAAM,CAACwB,iBAAvB,wBACI,cAAO,IAAI,CAAC,MAAZ,CACO,WAAW,CAAC,gBADnB,CAEO,YAAY,CAAEf,OAFrB,CAGO,EAAE,CAAIN,WAHb,CAIO,GAAG,CAAEI,WAJZ,CAKO,SAAS,CAAEP,MAAM,CAACyB,YALzB,CAMO,QAAQ,CAAE,kBAACP,CAAD,CAAO,CAACV,WAAW,CAAG,IAAd,CAAoBkB,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkC,CAN/E,EADJ,cAUI,YAAK,SAAS,CAAE3B,MAAM,CAAC4B,eAAvB,CAAwC,OAAO,CAAElB,aAAjD,oBAVJ,GADJ,CAcH,CAED,cAAeT,CAAAA,IAAf","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * TodoItem.js\n * \n * \n * \n * \n */\n\n\nimport { useState, useEffect, useRef} from 'react';\nimport { TextInput } from 'react-native';\nimport { isCompositeComponent } from 'react-dom/test-utils';\nimport { ClickAwayListener } from '@material-ui/core';\n\n\n\nimport tStyle from './style/TodoItem.module.css';\n\n\nfunction Card(props) {\n    \n    const {todoItemKey, deleteTodoItem, updateTodoItemMessage, todo} = props;\n    const todoItemRef = useRef(null);\n    // const [inputEdited, setInputEdited] = useState(false);\n    let inputEdited = false;\n    var message = todo;\n\n    const deleteCurrent = () => \n    {\n        deleteTodoItem(todoItemKey);\n\n\n    }\n\n    const updateMessage = () =>\n    {        \n        \n        updateTodoItemMessage(todoItemKey, todoItemRef.current.value);\n\n    }\n    \n    useEffect(() =>\n    {\n        const todoInput = document.getElementById(todoItemKey);\n\n\n        function checkOutside(e) \n        {\n            // console.log(\"todoItem checkOutside called: \", todoItemRef);\n            var clickedInsideInput = todoInput.contains(e.target);\n            if (inputEdited && !clickedInsideInput) {\n\n                updateMessage();\n                inputEdited = false;\n            }\n        }\n\n        document.addEventListener(\"click\", (e) => checkOutside(e));\n\n        return (() => \n        {\n            document.removeEventListener(\"click\", (e) => checkOutside(e));\n        })\n\n    })\n\n\n\n    return (\n        <div className={tStyle.todoItemContainer}>\n            <input type=\"text\" \n                   placeholder=\"what to do... \" \n                   defaultValue={message} \n                   id = {todoItemKey}\n                   ref={todoItemRef}\n                   className={tStyle.messageInput}\n                   onChange={(e) => {inputEdited = true; console.log(\"textinput changed\");}}\n                   />\n            \n            <div className={tStyle.deleteContainer} onClick={deleteCurrent}>âœ˜</div>\n        </div>\n    );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}