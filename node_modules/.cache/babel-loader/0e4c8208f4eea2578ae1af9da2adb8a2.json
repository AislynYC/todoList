{"ast":null,"code":"var _jsxFileName = \"/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Todo.js\n * \n * \n * \n * \n */\nimport { useState, useEffect } from 'react';\nimport Card from '../components/Card.js';\nimport tStyle from './style/Todo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  var cards = new Object();\n  const [key, setKey] = useState(1);\n  var cards = {\n    0: {\n      name: \"\",\n      todoList: {\n        0: \"\"\n      }\n    }\n  };\n  const [ident, setIdent] = useState(1);\n  const [removeState, setRemoveState] = useState(false); // let [cards, setCards] = useState([\n  //                                         {\n  //                                             id: 0,\n  //                                             name: \"\",\n  //                                             description: \"\",\n  //                                             todo: [\"\"]\n  //                                         },\n  //                                     ]);\n\n  const addCard = () => {\n    setRemoveState(false);\n    cards[key] = {\n      0: {\n        name: \"\",\n        todoList: {\n          0: \"\"\n        }\n      }\n    };\n    setKey(prev => prev + 1);\n  };\n\n  const removeCard = cardKey => {\n    if (removeState) {\n      delete cards[cardKey];\n      console.log(\"Todo.js cards length: \", cards.length);\n    }\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tStyle.todoContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: tStyle.editsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: tStyle.addEvent,\n        onClick: addCard,\n        children: \"\\uFF0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: tStyle.removeEvent,\n        onClick: () => {\n          console.log(removeState);\n          setRemoveState(!removeState);\n          console.log(removeState);\n        },\n        children: \"\\uFF0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: tStyle.cardsContainer,\n      children: Object.values(cards).forEach(cardKey => {// return (\n        //     <Card removeCard = {removeCard}\n        //           removeState = {removeState} \n        //           card = {cards[cardKey]}\n        //           cardKey = {cardKey}></Card>\n        // )\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"qcclHbN2qmOK+5lgBgm45YRmOyk=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Todo.js"],"names":["useState","useEffect","Card","tStyle","Todo","cards","Object","key","setKey","name","todoList","ident","setIdent","removeState","setRemoveState","addCard","prev","removeCard","cardKey","console","log","length","todoContainer","editsContainer","addEvent","removeEvent","cardsContainer","values","forEach"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACZ,MAAIC,KAAK,GAAG,IAAIC,MAAJ,EAAZ;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;AACA,MAAIK,KAAK,GAAG;AACR,OAAG;AACCI,MAAAA,IAAI,EAAE,EADP;AAECC,MAAAA,QAAQ,EAAE;AACN,WAAG;AADG;AAFX;AADK,GAAZ;AAWA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C,CAfY,CAgBZ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAKA,QAAMe,OAAO,GAAG,MAAM;AAClBD,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAT,IAAAA,KAAK,CAACE,GAAD,CAAL,GAAa;AACT,SAAG;AACCE,QAAAA,IAAI,EAAE,EADP;AAECC,QAAAA,QAAQ,EAAE;AACN,aAAG;AADG;AAFX;AADM,KAAb;AAUAF,IAAAA,MAAM,CAACQ,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAN;AACH,GAbD;;AAeA,QAAMC,UAAU,GAAIC,OAAD,IAAa;AAC5B,QAAIL,WAAJ,EACA;AAEI,aAAOR,KAAK,CAACa,OAAD,CAAZ;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCf,KAAK,CAACgB,MAA5C;AACH;AACJ,GARD;;AAUApB,EAAAA,SAAS,CAAE,MAAM,CAGhB,CAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEE,MAAM,CAACmB,aAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEnB,MAAM,CAACoB,cAAvB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAEpB,MAAM,CAACqB,QAA1B;AACQ,QAAA,OAAO,EAAET,OADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,SAAS,EAAEZ,MAAM,CAACsB,WAA1B;AACQ,QAAA,OAAO,EAAE,MAAM;AAACN,UAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAA0BC,UAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AAA8BM,UAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAAyB,SADzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACuB,cAAvB;AAAA,gBAEQpB,MAAM,CAACqB,MAAP,CAActB,KAAd,EAAqBuB,OAArB,CAA6BV,OAAO,IAAI,CACpC;AACA;AACA;AACA;AACA;AACA;AAEH,OARD;AAFR;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GAjGQd,I;;KAAAA,I;AAmGT,eAAeA,IAAf","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Todo.js\n * \n * \n * \n * \n */\n\n\nimport {useState, useEffect} from 'react';\n\nimport Card from '../components/Card.js'\nimport tStyle from './style/Todo.module.css';\n\n\nfunction Todo() {\n    var cards = new Object();\n    const [key, setKey] = useState(1);\n    var cards = {\n        0: {\n            name: \"\",\n            todoList: {\n                0: \"\",\n            }\n        }\n    }\n\n\n    \n    const [ident, setIdent] = useState(1);\n    const [removeState, setRemoveState] = useState(false);\n    // let [cards, setCards] = useState([\n    //                                         {\n    //                                             id: 0,\n    //                                             name: \"\",\n    //                                             description: \"\",\n    //                                             todo: [\"\"]\n    //                                         },\n                                            \n    //                                     ]);\n   \n    \n\n    \n    const addCard = () => {\n        setRemoveState(false);\n        cards[key] = {\n            0: {\n                name: \"\",\n                todoList: {\n                    0: \"\",\n                }\n            }\n        };\n        \n            \n        setKey(prev => prev + 1);\n    }\n\n    const removeCard = (cardKey) => { \n        if (removeState) \n        {\n            \n            delete cards[cardKey];\n\n            console.log(\"Todo.js cards length: \", cards.length);\n        }\n    }\n    \n    useEffect( () => {\n        \n        \n    }, [])\n\n    return (\n        <div className={tStyle.todoContainer}>\n            <div className={tStyle.editsContainer}>\n                <button className={tStyle.addEvent}\n                        onClick={addCard}>\n                    ＋\n                </button>\n                <button className={tStyle.removeEvent}\n                        onClick={() => {console.log(removeState); setRemoveState(!removeState); console.log(removeState)}}>\n                    －\n                </button>\n            </div>\n\n            <div className={tStyle.cardsContainer}> \n                {\n                    Object.values(cards).forEach(cardKey => {\n                        // return (\n                        //     <Card removeCard = {removeCard}\n                        //           removeState = {removeState} \n                        //           card = {cards[cardKey]}\n                        //           cardKey = {cardKey}></Card>\n                        // )\n                        \n                    })\n                }\n                {/* {\n                    cards.map((card) => {\n                        console.log(card);\n                        return ( <Card removeCard={removeCard}\n                                       removeState={removeState}\n                                       card={card}></Card>);\n                    })\n                } */}\n                \n            </div>\n\n        </div>\n    );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}