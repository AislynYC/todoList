{"ast":null,"code":"var _jsxFileName = \"/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Card.js\",\n    _s = $RefreshSig$();\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Card.js\n * \n * \n * \n * \n */\nimport { useState, useEffect, useRef } from 'react';\nimport { isCompositeComponent } from 'react-dom/test-utils';\nimport TodoItem from '../components/TodoItem.js';\nimport cStyle from './style/Card.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const {\n    cardKey,\n    card,\n    addTodoItem,\n    deleteTodoItem,\n    removeCard,\n    updateTodoItemMessage,\n    updateCardName\n  } = props;\n  const removeCardID = useRef(null);\n  const cardRef = useRef(null);\n  const [cardName, setCardName] = useState(props.card.name);\n  let inputEdited = false; // const removeCardID = \"removeCard\" + cardKey;\n\n  const switchColor = elem => {\n    console.log(\"fired once\");\n\n    if (elem.target.style.textDecoration == \"line-through\") {\n      console.log(\"clicked \", elem.target.style.textDecoration);\n      elem.target.style.textDecoration = \"\";\n      elem.target.style.backgroundColor = \"#ffffff\";\n      elem.target.style.color = \"#666668\";\n    } else {\n      // elem.target.style.backgroundColor = \"#9ecd49\";\n      elem.target.style.color = \"#9ecd49\";\n      elem.target.style.textDecoration = \"line-through\"; // elem.target.style.border = \"#9ecd49 2px solid\"\n    }\n  };\n  /*  addTodo()\n      Purpose:    calls addTodoItem and pass in cardKey\n      Effect:     Calls props function addTodoItem and pass in CardID\n      Parameters: none\n  */\n\n\n  const addTodo = () => {\n    addTodoItem(cardKey);\n  };\n\n  const updateCardNameWithTarget = () => {\n    console.log(\"cardjs updateCardNameWthTar targetval: \", cardRef.current.value);\n    updateCardName(cardKey, cardRef.current.value);\n  };\n\n  const removeCardWithKey = () => {\n    if (removeState) {\n      removeCard(cardKey);\n    }\n  };\n  /*  deleteTodoItemWithKey()\n      Purpose:    calls deleteTodoItem and pass in cardKey\n      Effect:     Calls props function deleteTodoItem and pass in \n                  cardKey with received arguments todoItemKey\n      Parameters: int todoItemKey - the identifier to the todoItem that will\n                                    be changed \n  */\n\n\n  const deleteTodoItemWithKey = todoItemKey => {\n    deleteTodoItem(cardKey, todoItemKey);\n  };\n  /*  updateTodoItemMessageWithKey()\n      Purpose:    calls updateTodoItemMessage and pass in cardKey\n      Effect:     Calls props function updateTodoItemMessage and pass in \n                  cardKey with received arguments todoItemKey and message\n      Parameters: int todoItemKey - the identifier to the todoItem that will\n                                    be changed \n                  string message  - the message that needs to be saved\n  */\n\n\n  const updateTodoItemMessageWithKey = (todoItemKey, message) => {\n    updateTodoItemMessage(cardKey, todoItemKey, message);\n  };\n\n  useEffect(() => {\n    const titleInput = document.getElementById(cardKey);\n    const overlayRemoveCard = document.getElementById(removeCardID);\n    /*  checks if the mouse is clicked outside of the provided target\n        then calls corresponding function within */\n\n    function checkOutside(e) {\n      // console.log(\"todoItem checkOutside called: \", inputEdited);\n      var clickedInsideInput = titleInput.contains(e.target);\n\n      if (inputEdited && !clickedInsideInput) {\n        console.log(\"TodoItem oh shet clicked outside\");\n        updateCardNameWithTarget();\n        inputEdited = false;\n      }\n    }\n\n    titleInput.addEventListener(\"click\", () => inputEdited = true);\n    removeCardID.current.addEventListener(\"click\", removeCardWithKey);\n    document.addEventListener(\"click\", e => checkOutside(e));\n    return () => {\n      titleInput.removeEventListener(\"click\", () => inputEdited = true); // removeCardID.current.removeEventListener(\"click\", removeCardWithKey);\n\n      document.removeEventListener(\"click\", e => checkOutside(e));\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.removeState ? cStyle.cardRemoveContainer : cStyle.cardContainer\n    /* onClick={async () => await props.removeCard(cardKey)} */\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cStyle.titleContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a name...\",\n        defaultValue: cardName,\n        id: cardKey,\n        ref: cardRef,\n        className: cStyle.titleInput,\n        onChange: () => {\n          inputEdited = true;\n          console.log(\"inputEdited Changed from CardJS: \", cardKey, \" \", inputEdited);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cStyle.addTodo,\n        onClick: () => {\n          addTodo();\n          console.log(\"add button clicked\");\n        },\n        children: \"\\uFF0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cStyle.scrollableContainer,\n      children: Object.keys(card.todoList).map((todoItemKey, index) => {\n        return (\n          /*#__PURE__*/\n          // console.log(\"card.js \")\n          _jsxDEV(TodoItem, {\n            todo: card.todoList[todoItemKey],\n            todoItemKey: todoItemKey,\n            deleteTodoItem: deleteTodoItemWithKey,\n            updateTodoItemMessage: updateTodoItemMessageWithKey\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: removeCardID,\n      className: cStyle.removeOverlayContainer,\n      children: props.removeState ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cStyle.removeOverlay,\n        children: \"CLICK TO REMOVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 100\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"Y7z+RxuRHuOK6mI+z710sUsc4dQ=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Card.js"],"names":["useState","useEffect","useRef","isCompositeComponent","TodoItem","cStyle","Card","props","cardKey","card","addTodoItem","deleteTodoItem","removeCard","updateTodoItemMessage","updateCardName","removeCardID","cardRef","cardName","setCardName","name","inputEdited","switchColor","elem","console","log","target","style","textDecoration","backgroundColor","color","addTodo","updateCardNameWithTarget","current","value","removeCardWithKey","removeState","deleteTodoItemWithKey","todoItemKey","updateTodoItemMessageWithKey","message","titleInput","document","getElementById","overlayRemoveCard","checkOutside","e","clickedInsideInput","contains","addEventListener","removeEventListener","cardRemoveContainer","cardContainer","titleContainer","scrollableContainer","Object","keys","todoList","map","index","removeOverlayContainer","removeOverlay"],"mappings":"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","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Card.js\n * \n * \n * \n * \n */\n\n\nimport {useState, useEffect, useRef} from 'react';\nimport { isCompositeComponent } from 'react-dom/test-utils';\n\nimport TodoItem from '../components/TodoItem.js'\n\n\nimport cStyle from './style/Card.module.css';\n\n\nfunction Card(props) {\n    const {cardKey, card, addTodoItem, deleteTodoItem, removeCard, updateTodoItemMessage, updateCardName} = props;\n \n    \n    const removeCardID = useRef(null);\n    const cardRef = useRef(null);\n    const [cardName, setCardName] = useState(props.card.name);\n        \n    let inputEdited = false;\n    // const removeCardID = \"removeCard\" + cardKey;\n\n    const switchColor = (elem) => {\n        console.log(\"fired once\");\n        if (elem.target.style.textDecoration == \"line-through\") {\n            console.log(\"clicked \", elem.target.style.textDecoration)\n            elem.target.style.textDecoration = \"\";\n            elem.target.style.backgroundColor = \"#ffffff\";\n            elem.target.style.color = \"#666668\";\n        }\n        else {\n            // elem.target.style.backgroundColor = \"#9ecd49\";\n            elem.target.style.color = \"#9ecd49\";\n            elem.target.style.textDecoration = \"line-through\";\n\n            // elem.target.style.border = \"#9ecd49 2px solid\"\n        }\n      \n\n    }\n\n    /*  addTodo()\n        Purpose:    calls addTodoItem and pass in cardKey\n        Effect:     Calls props function addTodoItem and pass in CardID\n        Parameters: none\n    */\n    const addTodo = () => \n    {\n        addTodoItem(cardKey);\n    }\n\n \n\n    const updateCardNameWithTarget = () => \n    {\n        console.log(\"cardjs updateCardNameWthTar targetval: \", cardRef.current.value);\n        updateCardName(cardKey, cardRef.current.value)\n    }\n\n    const removeCardWithKey = () => \n    { \n        if (removeState) {\n            removeCard(cardKey);\n        }\n    }\n\n    /*  deleteTodoItemWithKey()\n        Purpose:    calls deleteTodoItem and pass in cardKey\n        Effect:     Calls props function deleteTodoItem and pass in \n                    cardKey with received arguments todoItemKey\n        Parameters: int todoItemKey - the identifier to the todoItem that will\n                                      be changed \n    */\n    const deleteTodoItemWithKey = (todoItemKey) => \n    {\n        deleteTodoItem(cardKey, todoItemKey);\n    }\n\n    /*  updateTodoItemMessageWithKey()\n        Purpose:    calls updateTodoItemMessage and pass in cardKey\n        Effect:     Calls props function updateTodoItemMessage and pass in \n                    cardKey with received arguments todoItemKey and message\n        Parameters: int todoItemKey - the identifier to the todoItem that will\n                                      be changed \n                    string message  - the message that needs to be saved\n    */\n    const updateTodoItemMessageWithKey = (todoItemKey, message) => \n    {\n        updateTodoItemMessage(cardKey, todoItemKey, message);\n    }\n\n\n    useEffect(() =>\n    {\n        const titleInput = document.getElementById(cardKey);\n        const overlayRemoveCard = document.getElementById(removeCardID);\n        /*  checks if the mouse is clicked outside of the provided target\n            then calls corresponding function within */\n        function checkOutside(e) \n        {\n            // console.log(\"todoItem checkOutside called: \", inputEdited);\n            var clickedInsideInput = titleInput.contains(e.target);\n            if (inputEdited && !clickedInsideInput) {\n                console.log(\"TodoItem oh shet clicked outside\");\n                updateCardNameWithTarget();\n                inputEdited = false;\n            }\n        }\n\n        titleInput.addEventListener(\"click\", () => inputEdited = true);\n        removeCardID.current.addEventListener(\"click\", removeCardWithKey);\n        document.addEventListener(\"click\", (e) => checkOutside(e));\n\n        return (() => \n        {\n            titleInput.removeEventListener(\"click\", () => inputEdited = true)\n            // removeCardID.current.removeEventListener(\"click\", removeCardWithKey);\n            document.removeEventListener(\"click\", (e) => checkOutside(e));\n        })\n\n    })\n\n\n    return (\n        <div className={props.removeState ? cStyle.cardRemoveContainer : cStyle.cardContainer} \n             /* onClick={async () => await props.removeCard(cardKey)} */>\n            <div className={cStyle.titleContainer}> \n                <input type=\"text\" \n                       placeholder=\"Enter a name...\" \n                       defaultValue={cardName} \n                       id={cardKey}\n                       ref={cardRef}\n                       className={cStyle.titleInput}\n                       onChange={() => {inputEdited=true; console.log(\"inputEdited Changed from CardJS: \", cardKey, \" \", inputEdited)}}/>\n                <div className={cStyle.addTodo} onClick={() => {addTodo(); console.log(\"add button clicked\")}}>＋</div>\n            </div>\n            \n\n            <div className={cStyle.scrollableContainer}> \n                \n                {\n                    Object.keys(card.todoList).map((todoItemKey, index) => {\n\n                        return (\n                            // console.log(\"card.js \")\n                            <TodoItem todo={card.todoList[todoItemKey]}\n                                      todoItemKey = {todoItemKey}\n                                      key = {index}\n                                      deleteTodoItem={deleteTodoItemWithKey}\n                                      updateTodoItemMessage={updateTodoItemMessageWithKey}>\n                                      </TodoItem>\n                        )\n                    })\n                }\n                \n                \n            </div>\n            <div  ref={removeCardID} className={cStyle.removeOverlayContainer}>\n                {props.removeState ? <div className={cStyle.removeOverlay}>CLICK TO REMOVE</div> : <span></span>}\n            </div>\n        \n        </div>\n    );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}