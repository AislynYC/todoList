{"ast":null,"code":"var _jsxFileName = \"/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Todo.js\n * \n * \n * \n * \n */\nimport { useState, useEffect } from 'react';\nimport Card from '../components/Card.js';\nimport tStyle from './style/Todo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  var cardsDefault = new Object();\n  const [, rerender] = useState();\n  var key = 0; // const [key, setKey] = useState(1);\n\n  cardsDefault = {\n    0: {\n      name: \"\",\n      todoList: {\n        0: \"\"\n      }\n    }\n  };\n  const [cards, setCards] = useState(cardsDefault);\n  const [removeState, setRemoveState] = useState(false); // let [cards, setCards] = useState([\n  //                                         {\n  //                                             id: 0,\n  //                                             name: \"\",\n  //                                             description: \"\",\n  //                                             todo: [\"\"]\n  //                                         },\n  //                                     ]);\n\n  const addCard = () => {\n    setRemoveState(false); // setCards(prev => prev[++key] = {\n    //         name: \"\",\n    //         todoList: {\n    //             0: \"\",\n    //     }\n    // })\n\n    cards[key] = {\n      0: {\n        name: \"\",\n        todoList: {\n          0: \"\"\n        }\n      }\n    };\n    console.log(\"Todo addCard Cards: \", cards);\n    setKey(prev => prev + 1);\n  };\n\n  const removeCard = cardKey => {\n    console.log(\"Todo removeCard cardkey: \", cardKey);\n\n    if (removeState) {\n      console.log(\"Todo removeCard cards b4: \", cards); // setCards(prev => prev[cardKey] = {});\n\n      var temp = cards;\n      delete temp[cardKey];\n      setCards(prev => prev = temp);\n      console.log(\"Todo removeCard cards after: \", cards); // rerender;\n\n      console.log(\"Todo.js cards length: \", cards.length);\n    }\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tStyle.todoContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: tStyle.editsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: tStyle.addEvent,\n        onClick: addCard,\n        children: \"\\uFF0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: tStyle.removeEvent,\n        onClick: () => {\n          console.log(removeState);\n          setRemoveState(!removeState);\n          console.log(removeState);\n        },\n        children: \"\\uFF0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: tStyle.cardsContainer,\n      children: Object.keys(cards).map(cardKey => {\n        console.log(\"Todo.js Key: \", key);\n        return /*#__PURE__*/_jsxDEV(Card, {\n          removeCard: removeCard,\n          removeState: removeState,\n          card: cards[cardKey],\n          cardKey: cardKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"POyDpqZEeYHk1IrQsNmhTVcUjJE=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/dumbcan/Desktop/todoList/todoList/todoList/src/components/Todo.js"],"names":["useState","useEffect","Card","tStyle","Todo","cardsDefault","Object","rerender","key","name","todoList","cards","setCards","removeState","setRemoveState","addCard","console","log","setKey","prev","removeCard","cardKey","temp","length","todoContainer","editsContainer","addEvent","removeEvent","cardsContainer","keys","map"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACZ,MAAIC,YAAY,GAAG,IAAIC,MAAJ,EAAnB;AACA,QAAM,GAAGC,QAAH,IAAeP,QAAQ,EAA7B;AACA,MAAIQ,GAAG,GAAG,CAAV,CAHY,CAIZ;;AACAH,EAAAA,YAAY,GAAG;AACX,OAAG;AACCI,MAAAA,IAAI,EAAE,EADP;AAECC,MAAAA,QAAQ,EAAE;AACN,WAAG;AADG;AAFX;AADQ,GAAf;AASA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACK,YAAD,CAAlC;AAGA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C,CAjBY,CAkBZ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAKA,QAAMe,OAAO,GAAG,MAAM;AAClBD,IAAAA,cAAc,CAAC,KAAD,CAAd,CADkB,CAElB;AAEA;AACA;AACA;AAEA;AACA;;AACAH,IAAAA,KAAK,CAACH,GAAD,CAAL,GAAa;AACT,SAAG;AACCC,QAAAA,IAAI,EAAE,EADP;AAECC,QAAAA,QAAQ,EAAE;AACN,aAAG;AADG;AAFX;AADM,KAAb;AAQAM,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCN,KAApC;AAEAO,IAAAA,MAAM,CAACC,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAN;AACH,GArBD;;AAuBA,QAAMC,UAAU,GAAIC,OAAD,IAAa;AAC5BL,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCI,OAAzC;;AACA,QAAIR,WAAJ,EACA;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CN,KAA1C,EADJ,CAGI;;AACA,UAAIW,IAAI,GAAGX,KAAX;AACA,aAAOW,IAAI,CAACD,OAAD,CAAX;AACAT,MAAAA,QAAQ,CAACO,IAAI,IAAIA,IAAI,GAAGG,IAAhB,CAAR;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CN,KAA7C,EAPJ,CAQI;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCN,KAAK,CAACY,MAA5C;AACH;AACJ,GAdD;;AAgBAtB,EAAAA,SAAS,CAAE,MAAM,CAGhB,CAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEE,MAAM,CAACqB,aAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAErB,MAAM,CAACsB,cAAvB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAEtB,MAAM,CAACuB,QAA1B;AACQ,QAAA,OAAO,EAAEX,OADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,SAAS,EAAEZ,MAAM,CAACwB,WAA1B;AACQ,QAAA,OAAO,EAAE,MAAM;AAACX,UAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAA0BC,UAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AAA8BG,UAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAAyB,SADzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACyB,cAAvB;AAAA,gBAGQtB,MAAM,CAACuB,IAAP,CAAYlB,KAAZ,EAAmBmB,GAAnB,CAAuBT,OAAO,IAAI;AAC9BL,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,GAA7B;AACA,4BACI,QAAC,IAAD;AAAM,UAAA,UAAU,EAAIY,UAApB;AACM,UAAA,WAAW,EAAIP,WADrB;AAEM,UAAA,IAAI,EAAIF,KAAK,CAACU,OAAD,CAFnB;AAGM,UAAA,OAAO,EAAIA;AAHjB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH,OARD;AAHR;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GA3GQjB,I;;KAAAA,I;AA6GT,eAAeA,IAAf","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Todo.js\n * \n * \n * \n * \n */\n\n\nimport {useState, useEffect} from 'react';\n\nimport Card from '../components/Card.js'\nimport tStyle from './style/Todo.module.css';\n\n\nfunction Todo() {\n    var cardsDefault = new Object();\n    const [, rerender] = useState();\n    var key = 0;\n    // const [key, setKey] = useState(1);\n    cardsDefault = {\n        0: {\n            name: \"\",\n            todoList: {\n                0: \"\",\n            }\n        }\n    };\n\n    const [cards, setCards] = useState(cardsDefault);\n\n    \n    const [removeState, setRemoveState] = useState(false);\n    // let [cards, setCards] = useState([\n    //                                         {\n    //                                             id: 0,\n    //                                             name: \"\",\n    //                                             description: \"\",\n    //                                             todo: [\"\"]\n    //                                         },\n                                            \n    //                                     ]);\n   \n    \n\n    \n    const addCard = () => {\n        setRemoveState(false);\n        // setCards(prev => prev[++key] = {\n            \n        //         name: \"\",\n        //         todoList: {\n        //             0: \"\",\n                \n        //     }\n        // })\n        cards[key] = {\n            0: {\n                name: \"\",\n                todoList: {\n                    0: \"\",\n                }\n            }\n        };\n        console.log(\"Todo addCard Cards: \", cards);\n            \n        setKey(prev => prev + 1);\n    }\n\n    const removeCard = (cardKey) => { \n        console.log(\"Todo removeCard cardkey: \", cardKey);\n        if (removeState) \n        {\n            console.log(\"Todo removeCard cards b4: \", cards);\n\n            // setCards(prev => prev[cardKey] = {});\n            var temp = cards; \n            delete temp[cardKey];\n            setCards(prev => prev = temp);\n            console.log(\"Todo removeCard cards after: \", cards);\n            // rerender;\n            console.log(\"Todo.js cards length: \", cards.length);\n        }\n    }\n    \n    useEffect( () => {\n\n        \n    }, [])\n\n    return (\n        <div className={tStyle.todoContainer}>\n            <div className={tStyle.editsContainer}>\n                <button className={tStyle.addEvent}\n                        onClick={addCard}>\n                    ＋\n                </button>\n                <button className={tStyle.removeEvent}\n                        onClick={() => {console.log(removeState); setRemoveState(!removeState); console.log(removeState)}}>\n                    －\n                </button>\n            </div>\n\n            <div className={tStyle.cardsContainer}> \n                {\n                    \n                    Object.keys(cards).map(cardKey => {\n                        console.log(\"Todo.js Key: \", key);\n                        return (\n                            <Card removeCard = {removeCard}\n                                  removeState = {removeState} \n                                  card = {cards[cardKey]}\n                                  cardKey = {cardKey}></Card>\n                        )\n                    })\n                }\n             \n                \n            </div>\n\n        </div>\n    );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}