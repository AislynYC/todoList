{"version":3,"sources":["components/TodoItem.js","components/Card.js","components/Todo.js","components/Header.js","App.js","reportWebVitals.js","index.js","components/style/Card.module.css","components/style/Todo.module.css","components/style/Header.module.css","components/style/TodoItem.module.css"],"names":["Card","props","todoItemKey","deleteTodoItem","updateTodoItemMessage","todo","todoItemRef","useRef","inputEdited","message","useEffect","todoInput","document","getElementById","checkOutside","e","clickedInsideInput","contains","target","current","value","addEventListener","removeEventListener","className","tStyle","todoItemContainer","type","placeholder","defaultValue","id","ref","messageInput","onChange","console","log","deleteContainer","onClick","cardKey","card","addTodoItem","removeCard","updateCardName","removeState","removeCardID","cardRef","useState","name","cardName","removeCardWithKey","deleteTodoItemWithKey","updateTodoItemMessageWithKey","titleInput","cStyle","cardRemoveContainer","cardContainer","titleContainer","addTodo","scrollableContainer","Object","keys","todoList","map","index","TodoItem","removeOverlayContainer","removeOverlay","Todo","cardsDefault","0","todoListKey","checkSaveAction","localStorage","getItem","cards","setCards","key","setKey","setRemoveState","saveList","setSaveList","updateLocal","setItem","JSON","stringify","addCard","tempCard","assign","prev","tempCards","a","length","parse","parseInt","addCardButton","removeCardButton","updateRemoveState","todoContainer","editsContainer","editButtons","addEvent","removeEvent","saveListContainer","saveCheckbox","checked","cardsContainer","Header","hStyle","headerContainer","headerName1","headerName2","headerName3","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports"],"mappings":"8RAoFeA,MAjEf,SAAcC,GAEV,IAAOC,EAA4DD,EAA5DC,YAAaC,EAA+CF,EAA/CE,eAAgBC,EAA+BH,EAA/BG,sBAAuBC,EAAQJ,EAARI,KACrDC,EAAcC,iBAAO,MAEvBC,GAAc,EACdC,EAAUJ,EA2Cd,OA3BAK,qBAAU,WAEN,IAAMC,EAAYC,SAASC,eAAeX,GAG1C,SAASY,EAAaC,GAGlB,IAAIC,EAAqBL,EAAUM,SAASF,EAAEG,QAC1CV,IAAgBQ,IAbxBZ,EAAsBF,EAAaI,EAAYa,QAAQC,OAgB/CZ,GAAc,GAMtB,OAFAI,SAASS,iBAAiB,SAAS,SAACN,GAAD,OAAOD,EAAaC,MAE/C,WAEJH,SAASU,oBAAoB,SAAS,SAACP,GAAD,OAAOD,EAAaC,UAQ9D,sBAAKQ,UAAWC,IAAOC,kBAAvB,UACI,uBAAOC,KAAK,OACLC,YAAY,iBACZC,aAAcnB,EACdoB,GAAM3B,EACN4B,IAAKxB,EACLiB,UAAWC,IAAOO,aAClBC,SAAU,SAACjB,GAAOP,GAAc,EAAMyB,QAAQC,IAAI,wBAGzD,qBAAKX,UAAWC,IAAOW,gBAAiBC,QApD1B,WAElBjC,EAAeD,IAkDX,wB,gBC6FGF,MA1Jf,SAAcC,GACV,IAAOoC,EAA8GpC,EAA9GoC,QAASC,EAAqGrC,EAArGqC,KAAMC,EAA+FtC,EAA/FsC,YAAapC,EAAkFF,EAAlFE,eAAgBqC,EAAkEvC,EAAlEuC,WAAYpC,EAAsDH,EAAtDG,sBAAuBqC,EAA+BxC,EAA/BwC,eAAgBC,EAAezC,EAAfyC,YAGhGC,EAAepC,iBAAO,MACtBqC,EAAUrC,iBAAO,MACvB,EAAgCsC,mBAAS5C,EAAMqC,KAAKQ,MAApD,mBAAOC,EAAP,KAEIvC,GAFJ,MAEkB,GAwCZwC,EAAoB,WAElBN,GACAF,EAAWH,IAWbY,EAAwB,SAAC/C,GAE3BC,EAAekC,EAASnC,IAWtBgD,EAA+B,SAAChD,EAAaO,GAE/CL,EAAsBiC,EAASnC,EAAaO,IAmChD,OA/BAC,qBAAU,WAEN,IAAMyC,EAAavC,SAASC,eAAewB,GACjBzB,SAASC,eAAe8B,GAGlD,SAAS7B,EAAaC,GAGlB,IAAIC,EAAqBmC,EAAWlC,SAASF,EAAEG,QAC3CV,IAAgBQ,IAChBiB,QAAQC,IAAI,oCAhDpBD,QAAQC,IAAI,0CAA2CU,EAAQzB,QAAQC,OACvEqB,EAAeJ,EAASO,EAAQzB,QAAQC,OAiDhCZ,GAAc,GAQtB,OAJA2C,EAAW9B,iBAAiB,SAAS,kBAAMb,GAAc,KACzDmC,EAAaxB,QAAQE,iBAAiB,QAAS2B,GAC/CpC,SAASS,iBAAiB,SAAS,SAACN,GAAD,OAAOD,EAAaC,MAE/C,WAEJoC,EAAW7B,oBAAoB,SAAS,kBAAMd,GAAc,KAE5DI,SAASU,oBAAoB,SAAS,SAACP,GAAD,OAAOD,EAAaC,UAO9D,sBAAKQ,UAAWmB,EAAcU,IAAOC,oBAAsBD,IAAOE,cAAlE,UAEI,sBAAK/B,UAAW6B,IAAOG,eAAvB,UACI,uBAAO7B,KAAK,OACLC,YAAY,kBACZC,aAAcmB,EACdlB,GAAIQ,EACJP,IAAKc,EACLrB,UAAW6B,IAAOD,WAClBnB,SAAU,WAAOxB,GAAY,EAAMyB,QAAQC,IAAI,oCAAqCG,EAAS,IAAK7B,MACzG,qBAAKe,UAAW6B,IAAOI,QAASpB,QAAS,WAtFjDG,EAAYF,GAsFuDJ,QAAQC,IAAI,uBAAvE,uBAIJ,qBAAKX,UAAW6B,IAAOK,oBAAvB,SAGQC,OAAOC,KAAKrB,EAAKsB,UAAUC,KAAI,SAAC3D,EAAa4D,GAEzC,OAEI,aADA,CACCC,EAAD,CAAU1D,KAAMiC,EAAKsB,SAAS1D,GACpBA,YAAeA,EAEfC,eAAgB8C,EAChB7C,sBAAuB8C,GAFhBY,QAUjC,qBAAMhC,IAAKa,EAAcpB,UAAW6B,IAAOY,uBAA3C,SACKtB,EAAc,qBAAKnB,UAAW6B,IAAOa,cAAvB,6BAA8D,+B,gBCgK9EC,MApTf,WAII,IAAIC,EAAe,IAAIT,OACvBS,EAAe,CACXC,EAAG,CACCtB,KAAM,GACNc,SAAU,CACNQ,EAAG,IAEPC,YAAa,IAKrB,IAAMC,EAAyD,SAAvCC,aAAaC,QAAQ,cAC7CvC,QAAQC,IAAI,oBAAqBoC,GAGjC,MAA0BzB,mBAASsB,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAAsB7B,mBAAS,GAA/B,mBAAO8B,EAAP,KAAYC,EAAZ,KACA,EAAsC/B,oBAAS,GAA/C,mBAAOH,EAAP,KAAoBmC,EAApB,KAEA,EAAgChC,oBAAS,GAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KAGMC,EAAc,WAEhBT,aAAaU,QAAQ,aAAcC,KAAKC,UAAUV,IAClDF,aAAaU,QAAQ,aAAcH,GACnCP,aAAaU,QAAQ,UAAWN,GAChC1C,QAAQC,IAAI,qBAcVkD,EAAU,WAGZP,GAAe,GAEf,IAAIQ,EAAW3B,OAAO4B,OAAO,GAAIb,GACjCY,EAASV,GAAOjB,OAAO4B,OAAO,GAAInB,EAAa,IAG/CS,GAAO,SAAAW,GAAI,OAAIA,EAAO,KAEtBb,EAASW,GAETL,KAcExC,EAAa,SAACH,GAGhBJ,QAAQC,IAAI,uBAAwBG,GAEpC,IAAImD,EAAY9B,OAAO4B,OAAO,GAAIb,UAE3Be,EAAUnD,GACjBqC,GAAS,SAAAa,GAAI,OAAWC,KAIxBR,KAaEvC,EAAiB,SAACJ,EAASU,GAE7B,IAAIyC,EAAY9B,OAAO4B,OAAO,GAAIb,GAClCxC,QAAQC,IAAI,0BAA2BsD,GAEvCA,EAAUnD,GAASS,KAAOC,EAC1Bd,QAAQC,IAAI,yBAA0BsD,GACtCd,GAAS,SAAAa,GAAI,OAAWC,KACxBvD,QAAQC,IAAI,0BAA2BuC,EAAMpC,GAASS,MAEtDkC,KAiBEzC,EAAc,SAACF,GAGjB,IAAImD,EAAY9B,OAAO4B,OAAO,GAAIb,GAGlCe,EAAUnD,GAASuB,SAAnB,2BACO4B,EAAUnD,GAASuB,UAD1B,kBAEK4B,EAAUnD,GAASgC,YAAe,KAKvCmB,EAAUnD,GAASgC,cACnBK,GAAS,SAAAa,GAAI,OAAWC,KACxBvD,QAAQC,IAAI,6BAA8BuC,GAE1CO,KAqBE7E,EAAc,uCAAG,WAAOkC,EAASnC,GAAhB,eAAAuF,EAAA,sDAIf/B,OAAOC,KAAKc,EAAMpC,GAASuB,UAAU8B,OAAS,IAC1CF,EAAY9B,OAAO4B,OAAO,GAAIb,GAClCxC,QAAQC,IAAI,mCAAoCsD,EAAUnD,GAASuB,UACnE3B,QAAQC,IAAI,sCAAuChC,GAEnD+B,QAAQC,IAAI,6BAA8BsD,EAAUnD,GAASuB,SAAS1D,WAC/DsF,EAAUnD,GAASuB,SAAS1D,GACnC+B,QAAQC,IAAI,gCAAiCsD,EAAUnD,GAASuB,SAAS1D,IAEzEwE,GAAS,SAAAa,GAAI,OAAWC,KACxBvD,QAAQC,IAAI,gCAAiCuC,GAC7CxC,QAAQC,IAAI,oCAAqCsD,GAEjDR,KAjBe,2CAAH,wDAqCd5E,EAAwB,SAACiC,EAASnC,EAAaO,GAEjD,IAAI+E,EAAY9B,OAAO4B,OAAO,GAAIb,GAElCe,EAAUnD,GAASuB,SAAS1D,GAAeO,EAE3CiE,GAAS,SAAAa,GAAI,OAAWC,KAExBjB,aAAaU,QAAQ,aAAcC,KAAKC,UAAUV,IAElDO,KA8CJ,OAzCAtE,oBAAS,sBAAC,sBAAA+E,EAAA,0DAGFnB,EAHE,gCAIII,EAASQ,KAAKS,MAAMpB,aAAaC,QAAQ,gBAJ7C,OAKFI,EAAOgB,SAASrB,aAAaC,QAAQ,aACrCvC,QAAQC,IAAI,yBAA0ByC,GACtC1C,QAAQC,IAAI,sCAAuCqC,aAAaC,QAAQ,YAPtE,OAUND,aAAaU,QAAQ,aAAcH,GAV7B,2CAcP,IAEHpE,qBAAU,WAGN,IAAMmF,EAAgBjF,SAASC,eAAe,iBACxCiF,EAAmBlF,SAASC,eAAe,oBAG3CkF,EAAoB,WAEtBlB,GAAe,SAACU,GAAD,OAAWA,MAO9B,OALAM,EAAcxE,iBAAiB,QAAS+D,GACxCU,EAAiBzE,iBAAiB,QAAS0E,GAE3C9D,QAAQC,IAAI,0BAA4BuC,GAEhC,WAEJoB,EAAcvE,oBAAoB,QAAS8D,GAC3CU,EAAiBxE,oBAAoB,QAASyE,MAGnD,CAACX,IAIA,sBAAK7D,UAAWC,IAAOwE,cAAvB,UACI,sBAAKzE,UAAWC,IAAOyE,eAAvB,UACI,sBAAK1E,UAAWC,IAAO0E,YAAvB,UACI,wBAAQ3E,UAAWC,IAAO2E,SAElBtE,GAAG,gBAFX,oBAKA,wBAAQN,UAAWC,IAAO4E,YAClBvE,GAAG,mBADX,uBAOJ,wBAAON,UAAWC,IAAO6E,kBAAzB,UACI,uBAAO3E,KAAK,WAAWoB,KAAK,WAAWvB,UAAWC,IAAO8E,aAAcC,QAASzB,EAAU9C,SAAU,WAAOuC,aAAaU,QAAQ,cAAeH,GAAWC,GAAY,SAACQ,GAAD,OAAWA,QADrL,kBAMJ,qBAAKhE,UAAWC,IAAOgF,eAAvB,SAIQ9C,OAAOC,KAAKc,GAAOZ,KAAI,SAACxB,EAASyB,GAG7B,OAFA7B,QAAQC,IAAI,oBAAqBG,GACjCJ,QAAQC,IAAI,mBAAoBwB,OAAOC,KAAKc,IAExC,cAAC,EAAD,CAAMjC,WAAcA,EACdE,YAAeA,EACfJ,KAAQmC,EAAMpC,GACdA,QAAWA,EACXE,YAAaA,EAEbpC,eAAgBA,EAChBC,sBAAuBA,EACvBqC,eAAgBA,GAHXqB,Y,gBCtRxB2C,MAff,WAKI,OACI,sBAAKlF,UAAWmF,IAAOC,gBAAvB,UACI,qBAAKpF,UAAWmF,IAAOE,YAAa/E,GAAG,UAAvC,oBACA,qBAAKN,UAAWmF,IAAOG,YAAahF,GAAG,UAAvC,gBACA,qBAAKN,UAAWmF,IAAOI,YAAajF,GAAG,UAAvC,oBCMGkF,MAZf,WAEE,OACE,sBAAKxF,UAAU,MAAf,UAEE,cAAC,EAAD,IAEA,cAAC,EAAD,QCbSyF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/G,SAASC,eAAe,SAM1BmG,K,kBCfAY,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,oBAAsB,kCAAkC,eAAiB,6BAA6B,WAAa,yBAAyB,QAAU,sBAAsB,oBAAsB,kCAAkC,uBAAyB,qCAAqC,cAAgB,8B,kBCAhXD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,eAAiB,6BAA6B,kBAAoB,gCAAgC,aAAe,2BAA2B,SAAW,uBAAuB,YAAc,0BAA0B,eAAiB,+B,kBCArSD,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,WAAa,2BAA2B,YAAc,4BAA4B,YAAc,4BAA4B,YAAc,8B,kBCA9MD,EAAOC,QAAU,CAAC,kBAAoB,oCAAoC,aAAe,kC","file":"static/js/main.45cdeeec.chunk.js","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * TodoItem.js\n * \n * \n * \n * \n */\n\n\nimport { useState, useEffect, useRef} from 'react';\nimport { TextInput } from 'react-native';\nimport { isCompositeComponent } from 'react-dom/test-utils';\nimport { ClickAwayListener } from '@material-ui/core';\n\n\n\nimport tStyle from './style/TodoItem.module.css';\n\n\nfunction Card(props) {\n    \n    const {todoItemKey, deleteTodoItem, updateTodoItemMessage, todo} = props;\n    const todoItemRef = useRef(null);\n    // const [inputEdited, setInputEdited] = useState(false);\n    let inputEdited = false;\n    var message = todo;\n\n    const deleteCurrent = () => \n    {\n        deleteTodoItem(todoItemKey);\n\n\n    }\n\n    const updateMessage = () =>\n    {        \n        \n        updateTodoItemMessage(todoItemKey, todoItemRef.current.value);\n\n    }\n    \n    useEffect(() =>\n    {\n        const todoInput = document.getElementById(todoItemKey);\n\n\n        function checkOutside(e) \n        {\n            // console.log(\"todoItem checkOutside called: \", todoItemRef);\n            var clickedInsideInput = todoInput.contains(e.target);\n            if (inputEdited && !clickedInsideInput) {\n\n                updateMessage();\n                inputEdited = false;\n            }\n        }\n\n        document.addEventListener(\"click\", (e) => checkOutside(e));\n\n        return (() => \n        {\n            document.removeEventListener(\"click\", (e) => checkOutside(e));\n        })\n\n    })\n\n\n\n    return (\n        <div className={tStyle.todoItemContainer}>\n            <input type=\"text\" \n                   placeholder=\"what to do... \" \n                   defaultValue={message} \n                   id = {todoItemKey}\n                   ref={todoItemRef}\n                   className={tStyle.messageInput}\n                   onChange={(e) => {inputEdited = true; console.log(\"textinput changed\");}}\n                   />\n            \n            <div className={tStyle.deleteContainer} onClick={deleteCurrent}>✘</div>\n        </div>\n    );\n}\n\nexport default Card;\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Card.js\n * \n * \n * \n * \n */\n\n\nimport {useState, useEffect, useRef} from 'react';\nimport { isCompositeComponent } from 'react-dom/test-utils';\n\nimport TodoItem from '../components/TodoItem.js'\n\n\nimport cStyle from './style/Card.module.css';\n\n\nfunction Card(props) {\n    const {cardKey, card, addTodoItem, deleteTodoItem, removeCard, updateTodoItemMessage, updateCardName, removeState} = props;\n \n    \n    const removeCardID = useRef(null);\n    const cardRef = useRef(null);\n    const [cardName, setCardName] = useState(props.card.name);\n        \n    let inputEdited = false;\n    // const removeCardID = \"removeCard\" + cardKey;\n\n    const switchColor = (elem) => {\n        console.log(\"fired once\");\n        if (elem.target.style.textDecoration == \"line-through\") {\n            console.log(\"clicked \", elem.target.style.textDecoration)\n            elem.target.style.textDecoration = \"\";\n            elem.target.style.backgroundColor = \"#ffffff\";\n            elem.target.style.color = \"#666668\";\n        }\n        else {\n            // elem.target.style.backgroundColor = \"#9ecd49\";\n            elem.target.style.color = \"#9ecd49\";\n            elem.target.style.textDecoration = \"line-through\";\n\n            // elem.target.style.border = \"#9ecd49 2px solid\"\n        }\n      \n\n    }\n\n    /*  addTodo()\n        Purpose:    calls addTodoItem and pass in cardKey\n        Effect:     Calls props function addTodoItem and pass in CardID\n        Parameters: none\n    */\n    const addTodo = () => \n    {\n        addTodoItem(cardKey);\n    }\n\n \n\n    const updateCardNameWithTarget = () => \n    {\n        console.log(\"cardjs updateCardNameWthTar targetval: \", cardRef.current.value);\n        updateCardName(cardKey, cardRef.current.value)\n    }\n\n    const removeCardWithKey = () => \n    { \n        if (removeState) {\n            removeCard(cardKey);\n        }\n    }\n\n    /*  deleteTodoItemWithKey()\n        Purpose:    calls deleteTodoItem and pass in cardKey\n        Effect:     Calls props function deleteTodoItem and pass in \n                    cardKey with received arguments todoItemKey\n        Parameters: int todoItemKey - the identifier to the todoItem that will\n                                      be changed \n    */\n    const deleteTodoItemWithKey = (todoItemKey) => \n    {\n        deleteTodoItem(cardKey, todoItemKey);\n    }\n\n    /*  updateTodoItemMessageWithKey()\n        Purpose:    calls updateTodoItemMessage and pass in cardKey\n        Effect:     Calls props function updateTodoItemMessage and pass in \n                    cardKey with received arguments todoItemKey and message\n        Parameters: int todoItemKey - the identifier to the todoItem that will\n                                      be changed \n                    string message  - the message that needs to be saved\n    */\n    const updateTodoItemMessageWithKey = (todoItemKey, message) => \n    {\n        updateTodoItemMessage(cardKey, todoItemKey, message);\n    }\n\n\n    useEffect(() =>\n    {\n        const titleInput = document.getElementById(cardKey);\n        const overlayRemoveCard = document.getElementById(removeCardID);\n        /*  checks if the mouse is clicked outside of the provided target\n            then calls corresponding function within */\n        function checkOutside(e) \n        {\n            // console.log(\"todoItem checkOutside called: \", inputEdited);\n            var clickedInsideInput = titleInput.contains(e.target);\n            if (inputEdited && !clickedInsideInput) {\n                console.log(\"TodoItem oh shet clicked outside\");\n                updateCardNameWithTarget();\n                inputEdited = false;\n            }\n        }\n\n        titleInput.addEventListener(\"click\", () => inputEdited = true);\n        removeCardID.current.addEventListener(\"click\", removeCardWithKey);\n        document.addEventListener(\"click\", (e) => checkOutside(e));\n\n        return (() => \n        {\n            titleInput.removeEventListener(\"click\", () => inputEdited = true)\n            // removeCardID.current.removeEventListener(\"click\", removeCardWithKey);\n            document.removeEventListener(\"click\", (e) => checkOutside(e));\n        })\n\n    })\n\n\n    return (\n        <div className={removeState ? cStyle.cardRemoveContainer : cStyle.cardContainer} \n             /* onClick={async () => await props.removeCard(cardKey)} */>\n            <div className={cStyle.titleContainer}> \n                <input type=\"text\" \n                       placeholder=\"Enter a name...\" \n                       defaultValue={cardName} \n                       id={cardKey}\n                       ref={cardRef}\n                       className={cStyle.titleInput}\n                       onChange={() => {inputEdited=true; console.log(\"inputEdited Changed from CardJS: \", cardKey, \" \", inputEdited)}}/>\n                <div className={cStyle.addTodo} onClick={() => {addTodo(); console.log(\"add button clicked\")}}>＋</div>\n            </div>\n            \n\n            <div className={cStyle.scrollableContainer}> \n                \n                {\n                    Object.keys(card.todoList).map((todoItemKey, index) => {\n\n                        return (\n                            // console.log(\"card.js \")\n                            <TodoItem todo={card.todoList[todoItemKey]}\n                                      todoItemKey = {todoItemKey}\n                                      key = {index}\n                                      deleteTodoItem={deleteTodoItemWithKey}\n                                      updateTodoItemMessage={updateTodoItemMessageWithKey}>\n                                      </TodoItem>\n                        )\n                    })\n                }\n                \n                \n            </div>\n            <div  ref={removeCardID} className={cStyle.removeOverlayContainer}>\n                {removeState ? <div className={cStyle.removeOverlay}>CLICK TO REMOVE</div> : <span></span>}\n            </div>\n        \n        </div>\n    );\n}\n\nexport default Card;\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Todo.js\n * \n * \n * \n * \n */\n\n\nimport {useState, useEffect} from 'react';\nimport { isCompositeComponent } from 'react-dom/test-utils';\n\nimport Card from '../components/Card.js'\nimport tStyle from './style/Todo.module.css';\nimport Checkbox from '@material-ui/core';\n\n\nfunction Todo() {\n\n    \n\n    var cardsDefault = new Object();\n    cardsDefault = {\n        0: {\n            name: \"\",\n            todoList: {\n                0: \"\",\n            },\n            todoListKey: 1,\n        }, \n        \n    };\n\n    const checkSaveAction = localStorage.getItem(\"saveAction\") === \"true\";\n    console.log(\"checkSaveAction: \", checkSaveAction);\n\n    \n    const [cards, setCards] = useState(cardsDefault);\n    const [key, setKey] = useState(1);                      // cardKey\n    const [removeState, setRemoveState] = useState(false);\n\n    const [saveList, setSaveList] = useState(true);\n\n\n    const updateLocal = () =>\n    {\n        localStorage.setItem(\"savedCards\", JSON.stringify(cards));\n        localStorage.setItem(\"saveAction\", saveList);\n        localStorage.setItem(\"cardKey\", key);\n        console.log(\"updateLocal done\");\n            \n    }\n\n\n    /*  addCard()\n        Purpose:    to add an additional card \n        Effect:     sets the state of \"remove\" to false, preventing users \n                    to add cards while remove state is on. Then makes a copy \n                    of card Object to set new card by adding value of \n                    \"cardsDefault[0]\" with key \"key.\" finaly, increment key \n                    state.\n        Parameters: none\n    */\n    const addCard = () => \n    {\n\n        setRemoveState(false);\n        \n        let tempCard = Object.assign({}, cards);\n        tempCard[key] = Object.assign({}, cardsDefault[0]);\n        \n        /*  increment key by 1 */\n        setKey(prev => prev + 1);\n\n        setCards(tempCard);\n\n        updateLocal();\n        // localStorage.setItem(\"savedCards\", JSON.stringify(cards));\n\n\n    }\n\n\n    /*  removeCard()\n        Purpose:    to remove a card with given cardKey identifier\n        Effect:     On removeState being true, create a copy of cards Object \n                    to delete the identified card with given parameter cardKey.\n                    Then updates the state of cards. \n        Parameters: int cardKey - key to the card to be removed \n    */\n    const removeCard = (cardKey) => \n    { \n        /* Ensures only delete card when removeState is on */\n        console.log(\"removeCard cardKey: \", cardKey);\n\n        let tempCards = Object.assign({}, cards);\n           \n        delete tempCards[cardKey];\n        setCards(prev => prev = tempCards);\n            \n\n\n        updateLocal();\n\n        // localStorage.setItem(\"savedCards\", JSON.stringify(cards));\n\n    }\n    \n    /*  updateCardName()\n        Purpose:    to update name of specified card onChange\n        Effect:     Creates a copy of cards Object, then alter the name of \n                    specified card. \n        Parameters: int cardKey     - the identifier to the card\n                    string cardName  - the name to be saved\n    */\n    const updateCardName = (cardKey, cardName) => \n    {\n        let tempCards = Object.assign({}, cards);\n        console.log(\"before updateCardName: \", tempCards);\n\n        tempCards[cardKey].name = cardName;\n        console.log(\"after updateCardName: \", tempCards);\n        setCards(prev => prev = tempCards);\n        console.log(\"todojs updateCardName: \", cards[cardKey].name );\n\n        updateLocal();\n\n        // localStorage.setItem(\"savedCards\", JSON.stringify(cards));\n\n\n    }\n\n\n    /*  addTodoItem()\n        Purpose:    to add an additional todoItem\n        Effect:     makes a copy of \"cards\" to add additional string value\n                    to the new key \"cards[cardKey].todoListKey\". Then increment\n                    cards[cardKey].todoListKey by 1. lastly, setCards with the \n                    mutated tempCards Object \n        Parameters: int cardKey  - the identifier to the card that needs \n                                      needs to be altered\n    */\n    const addTodoItem = (cardKey) => \n    {\n        \n        let tempCards = Object.assign({}, cards);\n\n        /*  Adds new todoItem to the card */\n        tempCards[cardKey].todoList = {\n            ...tempCards[cardKey].todoList,\n            [tempCards[cardKey].todoListKey] : \"\",\n        }\n        \n        /* This increments the todoListKey by 1 to ensure adding todoItem is \n           added correctly each time */\n        tempCards[cardKey].todoListKey++;\n        setCards(prev => prev = tempCards);\n        console.log(\"todojs addTodoItem cards: \", cards);\n\n        updateLocal();\n\n        // localStorage.setItem(\"savedCards\", JSON.stringify(cards));\n\n\n    }\n\n    \n   \n    /*  deleteTodoItem()\n        Purpose:    to delete a todoItem\n        Effect:     Only allows the deletion of a todoItem if the specified \n                    card has a todoItemList greater than 1. On true, creates \n                    a copy of cards Object to delete the todoItem of at given\n                    cardKey at given todoItemKey. finally, update state of \n                    cards. \n        Parameters: int cardKey     - the identifier to the card that contains \n                                      the todoItem\n                    int todoItemKey - the identifier to the todoItem that will\n                                      be deleted \n    */\n    const deleteTodoItem = async (cardKey, todoItemKey) => \n    {\n\n        /*  Only deletes the todoItem if the card has todoItemList > 1 */\n        if (Object.keys(cards[cardKey].todoList).length > 1) {\n            let tempCards = Object.assign({}, cards);\n            console.log(\"todoJs deleteTodoItem todoList: \", tempCards[cardKey].todoList);\n            console.log(\"todoJs deleteTodoItem todoItemKey: \", todoItemKey);\n\n            console.log(\"todoJs deleteTodoItem: b4 \", tempCards[cardKey].todoList[todoItemKey]);\n            delete tempCards[cardKey].todoList[todoItemKey];\n            console.log(\"todoJs deleteTodoItem: after \", tempCards[cardKey].todoList[todoItemKey]);\n\n            setCards(prev => prev = tempCards);\n            console.log(\"todoJs deleteTodoItem cards: \", cards);\n            console.log(\"todoJs deleteTodoItem tempCards: \", tempCards);\n\n            updateLocal();\n\n            // localStorage.setItem(\"savedCards\", JSON.stringify(cards));\n\n\n\n        }\n        \n    }\n    /*  updateTodoItemMessage()\n        Purpose:    to update todoItem Message onChange\n        Effect:     Creates a copy of cards Object to change the todoItem of at \n                    given cardKey of given todoItemKey. finally, update state \n                    of cards. \n        Parameters: int cardKey     - the identifier to the card that contains \n                                      the todoItem\n                    int todoItemKey - the identifier to the todoItem that will\n                                      be changed \n                    string message  - the message that needs to be saved\n    */\n    const updateTodoItemMessage = (cardKey, todoItemKey, message) => \n    {\n        let tempCards = Object.assign({}, cards);\n        \n        tempCards[cardKey].todoList[todoItemKey] = message;\n\n        setCards(prev => prev = tempCards);\n        \n        localStorage.setItem(\"savedCards\", JSON.stringify(cards));\n\n        updateLocal();\n\n        // console.log(\"Todojs updateTodoItemMessage card message: \", cards[cardKey].todoList[todoItemKey])\n    }\n\n    useEffect(async() => \n    {\n       \n        if (checkSaveAction) {\n            await setCards(JSON.parse(localStorage.getItem(\"savedCards\")));\n            setKey(parseInt(localStorage.getItem(\"cardKey\")));\n            console.log(\"Todojs UseEffect key: \", key);\n            console.log(\"Todojs UseEffect localStorage key: \", localStorage.getItem(\"cardKey\"));\n\n        }\n        localStorage.setItem(\"saveAction\", saveList);\n\n        \n        \n    }, []);\n\n    useEffect(() => {\n\n       \n        const addCardButton = document.getElementById(\"addCardButton\");\n        const removeCardButton = document.getElementById(\"removeCardButton\");\n\n        \n        const updateRemoveState = () => \n        {\n            setRemoveState((prev) => !prev); \n        }\n        addCardButton.addEventListener(\"click\", addCard);\n        removeCardButton.addEventListener(\"click\", updateRemoveState);\n        \n        console.log(\"Todo UseEffeect cards: \" , cards);\n\n        return (() => \n        {\n            addCardButton.removeEventListener(\"click\", addCard);\n            removeCardButton.removeEventListener(\"click\", updateRemoveState);\n\n        });\n    }, [addCard])\n\n\n    return (\n        <div className={tStyle.todoContainer}>\n            <div className={tStyle.editsContainer}>\n                <div className={tStyle.editButtons}>\n                    <button className={tStyle.addEvent}\n                            // onClick={addCard}\n                            id=\"addCardButton\">\n                        ＋\n                    </button>\n                    <button className={tStyle.removeEvent}\n                            id=\"removeCardButton\"\n                            /* onClick={() => {console.log(removeState); setRemoveState(!removeState); console.log(removeState)}} */>\n                        －\n                    </button>\n                </div>\n                \n                <label className={tStyle.saveListContainer}>\n                    <input type=\"checkbox\" name=\"saveList\" className={tStyle.saveCheckbox} checked={saveList} onChange={() => {localStorage.setItem(\"saveAction\", !saveList); setSaveList((prev) => !prev);   }}/>\n                    Auto Save\n                </label>\n            </div>\n\n            <div className={tStyle.cardsContainer}> \n            \n                {\n                    \n                    Object.keys(cards).map((cardKey, index) => {\n                        console.log(\"Todo.js cardKey: \", cardKey);\n                        console.log(\"todojs objecke: \", Object.keys(cards));\n                        return (\n                            <Card removeCard = {removeCard}\n                                  removeState = {removeState} \n                                  card = {cards[cardKey]}\n                                  cardKey = {cardKey}\n                                  addTodoItem={addTodoItem}\n                                  key={index}\n                                  deleteTodoItem={deleteTodoItem}\n                                  updateTodoItemMessage={updateTodoItemMessage}\n                                  updateCardName={updateCardName}>\n                                    \n                            </Card>\n                        )\n                    })\n                }\n             \n                \n            </div>\n\n        </div>\n    );\n}\n\nexport default Todo;\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \n * Header.js\n * \n * \n * \n * \n */\n\n\nimport {useState, useEffect} from 'react';\n\n\nimport hStyle from './style/Header.module.css';\n\n\nfunction Header() {\n\n\n\n\n    return (\n        <div className={hStyle.headerContainer}>\n            <div className={hStyle.headerName1} id=\"header1\">☑</div>\n            <div className={hStyle.headerName2} id=\"header2\">To</div>\n            <div className={hStyle.headerName3} id=\"header3\">Do</div>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\n\nimport Todo from './components/Todo.js'\nimport Header from './components/Header.js'\n\nconst useStateWithLocalStorage = localStorageKey => {\n  const [value, setValue] = React.useState(\n    localStorage.getItem(localStorageKey) || ''\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(localStorageKey, value);\n  }, [value]);\n\n  return [value, setValue];\n};\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      \n      <Header></Header>\n\n      <Todo></Todo>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Card_cardContainer__1Yq8N\",\"cardRemoveContainer\":\"Card_cardRemoveContainer__EGAmy\",\"titleContainer\":\"Card_titleContainer__1_Sjo\",\"titleInput\":\"Card_titleInput__f_Zqq\",\"addTodo\":\"Card_addTodo__1vo79\",\"scrollableContainer\":\"Card_scrollableContainer__3YWRM\",\"removeOverlayContainer\":\"Card_removeOverlayContainer__2FRpd\",\"removeOverlay\":\"Card_removeOverlay__4Fnmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoContainer\":\"Todo_todoContainer__nbPdp\",\"editsContainer\":\"Todo_editsContainer__1psJG\",\"saveListContainer\":\"Todo_saveListContainer__2b_gH\",\"saveCheckbox\":\"Todo_saveCheckbox__h9sq4\",\"addEvent\":\"Todo_addEvent__4Pkl4\",\"removeEvent\":\"Todo_removeEvent__27I1p\",\"cardsContainer\":\"Todo_cardsContainer__2jcC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__2X8Hm\",\"headerName\":\"Header_headerName__4yG5r\",\"headerName1\":\"Header_headerName1__dtBpX\",\"headerName2\":\"Header_headerName2__3ZbDF\",\"headerName3\":\"Header_headerName3__1KWp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItemContainer\":\"TodoItem_todoItemContainer__16-3q\",\"messageInput\":\"TodoItem_messageInput__1pX0X\"};"],"sourceRoot":""}